version: 2
executorType: docker
containerInfo:
  - image: node:6
  - image: mongo:3
    cmd: ["mongod", "--smallfiles"]

stages:
  build:
    workDir: /home/ubuntu/aksite
    steps:
      - type: checkout
      - type: add-ssh-keys
      - type: shell
        name: Pre-Dependencies
        command: mkdir /home/ubuntu/artifacts
      - type: cache-restore
        keys:
          - aksite-npm-{{ .Branch }}-{{ checksum "package.json" }}
          # Providing keys in decreasing specificity means it's more likely a new cache can be built from an existing one.
          - aksite-npm-
      - type: shell
        name: Install Dependencies
        command: npm install --quiet
      - type: cache-save
        key: aksite-npm-{{ .Branch }}-{{ checksum "package.json" }}
        paths:
          - /home/ubuntu/aksite/node_modules
      - type: shell
        name: Test
        command: npm test
      - type: artifacts-store
        path: /home/ubuntu/artifacts
      - type: deploy
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            ./node_modules/.bin/gulp build

            cd dist && docker build --rm=false -t gcr.io/${PROJECT_NAME}/aksite:$CIRCLE_SHA1 .

            # Using a separate tag command until Docker 1.10 is available on CircleCI, then we can use two tags in the build command above
            docker tag gcr.io/${PROJECT_NAME}/aksite:$CIRCLE_SHA1 gcr.io/${PROJECT_NAME}/aksite:latest

            echo $ACCT_AUTH | base64 --decode -i > ~/account-auth.json
            sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ~/account-auth.json
            sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_NAME
            sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
            # Reading the zone from the env var is not working so we set it here
            sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
            sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME

            chmod 0744 ./scripts/deploy.sh
            ./scripts/deploy.sh
          fi
